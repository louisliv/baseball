- hosts: all
  sudo: yes
  vars:
    http_port: 80
    max_clients: 200
    client_side: /vagrant/client-react
    server_side: /vagrant/server
    vagrant_dir: /vagrant

    db_name: baseball
    db_user: vagrant
    db_password: "vagrant"
    postgresql_data_dir: /var/lib/pgsql/9.6/data/
    htpasswd_file: /etc/httpd/htpasswd/htpasswd
    htpasswd_users:
            - { name: vagrant, passwd: vagrant }
  remote_user: vagrant
  tasks:

  ##############################################
  # Apache
  ##############################################

  - name: Apache and Python WSGI will be present.
    yum: name={{ item }} state=present
    with_items: [httpd, mod_wsgi]
    become: yes
    become_method: sudo
  - name: write the apache config file
    template: src=/vagrant/directory.conf dest=/etc/httpd/conf.d/directory.conf
    notify:
      - restart apache
  - name: Add the Apache user to the vagrant users group.
    command: chown apache:apache /vagrant/server/
    become: yes
    become_method: sudo

  - name: Latest version of pip will be present.
    yum: name=python-pip state=latest
    become: yes
    become_method: sudo

  - name: Install PostgreSQL
    yum:
      update_cache: "true"
      state: present
      name:
        - postgresql96
        - postgresql
        - postgresql96-contrib
    tags: packages

  - name: Ensure PostgreSQL data directory exists.
    file:
      path: "{{ postgresql_data_dir }}"
      owner: postgres
      group: postgres
      state: directory
      mode: 0700
  - name: Check if PostgreSQL database is initialized.
    stat:
      path: "{{ postgresql_data_dir }}/PG_VERSION"
    register: pgdata_dir_version
  - name: Ensure PostgreSQL database is initialized.
    command: "/usr/pgsql-9.6/bin/postgresql96-setup initdb"
    when: not pgdata_dir_version.stat.exists
    become: true
    become_method: sudo
    # See: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
    vars:
      ansible_ssh_pipelining: true
  - name: Ensure the PostgreSQL service is running
    service: name=postgresql-9.6 state=started enabled=yes
  - name: Ensure database is created
    become: true
    become_user: postgres
    postgresql_db: name={{ db_name }}
                   encoding='UTF-8'
                   lc_collate='en_US.UTF-8'
                   lc_ctype='en_US.UTF-8'
                   template='template0'
                   state=present
  - name: Ensure user has access to the database
    become: true
    become_user: postgres
    postgresql_user: db={{ db_name }}
                     name={{ db_user }}
                     password={{ db_password }}
                     encrypted=yes
                     priv=ALL
                     state=present

  - name: Ensure user does not have unnecessary privileges
    become: true
    become_user: postgres
    postgresql_user: name={{ db_user }}
                     role_attr_flags=NOSUPERUSER,NOCREATEDB
                     state=present

  - name: write the postgresql config file
    template: src=/vagrant/pg_hba.conf dest=/var/lib/pgsql/9.6/data/pg_hba.conf
  - name: Restart the PostgreSQL service
    service: name=postgresql-9.6 state=restarted

  - name: migrate database
    command: python manage.py migrate --noinput chdir={{server_side}}
    become: True
  - name: Django flush database
    command: python manage.py flush --noinput chdir={{server_side}}
    become: True
    become_user: vagrant
  - name: Django collectstatic
    command: python manage.py collectstatic --noinput chdir={{server_side}}
    become: True
    become_user: vagrant
  - name: create super user
    command: python manage.py create_superuser 'admin' 'admin' 'louis.livingston@gmail.com' chdir={{server_side}}
    become: True
    become_user: vagrant
  - name: populate teams in database
    command: python manage.py populate_teams 2019 chdir={{server_side}}
    become: True
    become_user: vagrant
  - name: Install Watson
    command: python manage.py installwatson chdir={{server_side}}
    become: True
    become_user: vagrant
  - name: Build Watson
    command: python manage.py buildwatson chdir={{server_side}}
    become: True
    become_user: vagrant
  handlers:
    - name: restart apache
      service: name=httpd state=restarted
    - name: restart postgresql
      service: name=postgresql-9.6 state=restarted enabled=yes