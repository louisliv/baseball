- hosts: all
  sudo: yes
  vars:
    http_port: 80
    max_clients: 200
    client_side: /vagrant/client
    server_side: /vagrant/server
    vagrant_dir: /vagrant

    mysql_db_username: project
    mysql_db_password: "Nothing#1"
    htpasswd_file: /etc/httpd/htpasswd/htpasswd
    htpasswd_users:
            - { name: vagrant, passwd: vagrant }
  remote_user: vagrant
  tasks:
  - name: Install NPM Dependencies
    command: sudo npm install -g bower chdir={{vagrant_dir}}
    become: True
    become_user: vagrant
  - name: Install "gulp" node.js package globally.
    npm:
      name: gulp-cli
      global: yes
  - name: Install "gulp" node.js package locally
    command: npm install gulp --no-bin-links chdir={{client_side}}
    become: True
  - name: Install "gulp-sass" node.js package locally
    command: npm install gulp-sass --no-bin-links chdir={{client_side}}
    become: True
  - name: Run "gulp-build" to build css
    command: npm run gulp-build chdir={{client_side}}
    become: True
  - name: Run "gulp-build-js" to build js
    command: npm run gulp-build-js chdir={{client_side}}
    become: True
  - name: Bower Install
    command: bower install chdir={{vagrant_dir}}
    ignore_errors: yes
    register: bower_result
    become: True
    become_user: vagrant
  - name: Re-Run Bower if first failed
    command: bower install chdir={{vagrant_dir}}
    when: bower_result|failed
    become: True
    become_user: vagrant

  ##############################################
  # Apache
  ##############################################

  - name: Apache and Python WSGI will be present.
    yum: name={{ item }} state=present
    with_items: [httpd, mod_wsgi]
    become: yes
    become_method: sudo
  - name: write the apache config file
    template: src=/vagrant/directory.conf dest=/etc/httpd/conf.d/directory.conf
    notify:
      - restart apache
  - name: Add the Apache user to the vagrant users group.
    command: chown apache:apache /vagrant/server/
    become: yes
    become_method: sudo
  - name: Give Apache execute permissions for VirtualEnv.
    command: chown apache:apache /vagrant/server/db.sqlite3
    become: yes
    become_method: sudo

  - name: Latest version of pip will be present.
    yum: name=python-pip state=latest
    become: yes
    become_method: sudo

  - name: migrate database
    command: python manage.py migrate --noinput chdir={{server_side}}
    become: True
  - name: Django flush database
    command: python manage.py flush --noinput chdir={{server_side}}
    become: True
    become_user: vagrant
  - name: Django collectstatic
    command: python manage.py collectstatic --noinput chdir={{server_side}}
    become: True
    become_user: vagrant
    become_user: vagrant
  - name: create super user
    command: python manage.py create_superuser 'admin' 'admin' 'louis.livingston@gmail.com' chdir={{server_side}}
    become: True
    become_user: vagrant
  - name: Install Watson
    command: python manage.py installwatson chdir={{server_side}}
    become: True
    become_user: vagrant
  - name: Build Watson
    command: python manage.py buildwatson chdir={{server_side}}
    become: True
    become_user: vagrant
  handlers:
    - name: restart apache
      service: name=httpd state=restarted